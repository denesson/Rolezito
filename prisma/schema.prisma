generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Evento {
  id        Int       @id @default(autoincrement())
  nome      String
  data      DateTime
  local     String
  descricao String
  preco     String
  categoria String
  imagem    String?
  criadoEm  DateTime  @default(now())
  destaque  Boolean   @default(false)

  produtor   Usuario   @relation("EventosDoProdutor", fields: [produtorId], references: [id])
  produtorId Int

  // back‐relation para Reviews e Favoritos
  favoritos Favorito[]
  reviews   Review[]
}

enum Role {
  usuario
  produtor
  admin
}

model Usuario {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  senha    String
  nome     String
  role      Role      @default(usuario)   
  admin    Boolean   @default(false)
  criadoEm DateTime  @default(now())

  // back‐relation para Reviews e Favoritos
  favoritos Favorito[]
  reviews   Review[]
  eventos   Evento[]   @relation("EventosDoProdutor")
}

model Favorito {
  id       Int      @id @default(autoincrement())
  user     Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  evento   Evento   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId  Int
  criadoEm DateTime @default(now())
}

model Review {
  id         Int      @id @default(autoincrement())
  comentario String
  rating     Int      // 1 a 5
  user       Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  evento     Evento   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId    Int
  criadoEm   DateTime @default(now())
}

model Subscription {
  id         Int      @id @default(autoincrement())
  endpoint   String   @unique
  p256dh     String
  auth       String
  criadoEm   DateTime @default(now())
}
